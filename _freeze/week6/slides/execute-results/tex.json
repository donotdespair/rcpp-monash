{
  "hash": "dcb2e75b31042e936d35fc852f4aaae2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: ETC4500/ETC5450 Advanced&nbsp;R&nbsp;programming\nauthor: \"Week 6: Literate programming with Quarto\"\nformat:\n  presentation-beamer:\n    fontsize: \"14pt,t\"\n    section-titles: false\n    knitr:\n      opts_chunk:\n        dev: \"cairo_pdf\"\n    fig-width: 7.5\n    fig-height: 3.5\n    include-in-header: \n      - ../header.tex\n      - preamble.tex\n    colorlinks: true\n    urlcolor: MonashBlue\n    linkcolor: burntorange\n---\n\n\n\n# Literate programming\n\n## Literate programming\n\n * Due to Donald Knuth (Stanford), 1984\n * A script or document that contains an explanation of the program logic in a natural language (e.g. English), interspersed with snippets of source code, which can be compiled and rerun.\n * Generates two representations\\newline from a source file: formatted\\newline documentation and \"tangled\" code.\n\n\\placefig{10.5}{4.6}{width = 6cm}{WEB.png}\n\n## Literate programming\n\n* As a programming approach, it never quite caught on.\n* But it has become the standard approach for reproducible documents.\n\n## Literate programming examples\n\n* WEB (combining Pascal and TeX)\n* roxygen2 comments\n  * technically documentation generation rather than literate programming\n  * documentation embedded in code, rather than code embedded in documentation\n* Sweave documents\n* Jupyter notebooks\n* Rmarkdown documents\n* Quarto documents\n\n# roxygen2\n## roxygen2\n\n* roxygen2 documentation are just comments to R.\n* roxygen2::roxygenize():\n  * generates documentation from these comments in the form of Rd files\n  * adds relevant lines to the NAMESPACE file.\n* roxygen2::roxygenize() is called by devtools::document().\n* Advantage: keeps documentation with the code. More readable, less chance for errors.\n\n# Rmarkdown\n\n## Markdown syntax\n\\fontsize{14}{16}\\sf\nMarkdown: a \"markup\" language for formatting text.\n\n* Headings:\n\n    `# Heading 1`\\newline\n    `## Heading 2`\n\n* **Bold**: `**bold**`.\n* *Italic*: `*italic*`.\n* Blockquotes:\n\n    `> blockquote`.\n\n## Markdown and Rmarkdown\n\n* Markdown (markup language):\n  * Extension either `.md` or `.markdown`.\n  * Used in many places on the web, in note-taking apps, etc.\n\n* Rmarkdown (markup language):\n  * an extension of markdown that allows for embedded R code chunks.\n  * Extension `.Rmd`.\n\n* Rmarkdown (package):\n  * an R package that allows for the conversion of `.Rmd` files to other formats.\n\n## Rmarkdown files\n\n* Structure:\n  1. YAML header\n  2. Markdown content\n  3. R code chunks surrounded by `` ```{r} `` and `` ``` ``\n  4. Inline R surrounded by `` `r `` and `` ` ``\n\n* Rmarkdown documents can be compiled to HTML, PDF, Word, and other formats\n* Compile with `rmarkdown::render(\"file.Rmd\")`\n\n## Rmarkdown, knitr and pandoc\n\n* `rmarkdown::render()`\n  * Uses `knitr` to run all code chunks, and \"knit\" the results into a markdown file (replacing R chunks with output).\n  * Uses `pandoc` to convert the markdown file to the desired output format.\n  * If PDF output is desired, LaTeX then converts the tex file (from pandoc output) to pdf.\n\n\\centerline{\\includegraphics[width = 10cm]{rmd.png}}\n\n## knitr functions\n\n* `knitr::knit()`: knits a single Rmd file --- runs all code chunks and replaces them with output in a markdown file.\n* `knitr::purl()`: extracts all R code from an Rmd file and saves it to a new file.\n* `knitr::spin()`: knits a specially formatted R script file into an Rmd file.\n\n## Rmarkdown packages\n\n  * rmarkdown (to html, pdf, docx, odt, rtf, md, etc.)\n  * bookdown (to html, pdf, epub)\n  * blogdown (to html) -- uses hugo rather than pandoc\n  * xaringan (to html) -- uses remark.js rather than pandoc\n  * beamer (to pdf)\n  * rticles (to pdf)\n  * tufte (to html, pdf)\n  * vitae (to pdf)\n  * distill (to html)\n  * flexdashboard (to html)\n\n# Quarto\n\n## Quarto\n\\fontsize{14}{16}\\sf\n\n* Generalization of Rmarkdown (not dependent on R)\n* Supports R, Python, Javascript and Julia chunks by using either `knitr`, `jupyter` or `ObservableJS` engines.\n* More consistent yaml header and chunk options.\n* Many more output formats, and many more options for customizing format.\n* Heavier reliance on pandoc Lua filters\n* Uses pandoc templates for extensions\n\n\\centerline{\\includegraphics[width = 10cm]{images/qmd.png}}\n\n## Choose your engine\n\nSpecify the engine in the yaml header:\n\n\n```{.default}\n---\nengine: knitr\n---\n```\n\n\n```{.default}\n---\nengine: jupyter\njupyter: python3\n---\n```\n\n**Default:** If any `{r}` blocks found, use `knitr` engine; otherwise use `jupyter` (with kernel determined by first block).\n\n## Code chunks \n\nChunk options use the hash-pipe `#|`\n\n\n````{.default}\n```{r}\n#| label: fig-chunklabel\n#| fig-caption: My figure\n#| fig-width: 6\n#| fig-height: 4\nmtcars |>\n  ggplot(aes(x = mpg, y = wt)) +\n  geom_point()\n```\n````\n\nReference the figure using `@fig-chunklabel`.\n\n## Chunk options\n\n* Quarto consistently uses hyphenated options (`fig-width` rather than `fig.width`)\n* The Rmarkdown `knitr` options are recognized for backwards compatibility.\n* Options that are R expressions need to be prefaced by `!expr`\n\n  \n  ````{.default}\n  ```{r}\n  #| fig-cap: !expr paste(\"My figure\", 1+1)\n  ```\n  ````\n\n## Execute options\n\n*   `execute` option in yaml header can be used instead of a `setup` chunk:\n\n    \n    ```{.default}\n    execute:\n      cache: true\n      echo: false\n      warning: false\n    ```\n\n## Some chunk options\n\\fontsize{14}{15}\\sf\\vspace*{-0.2cm}\n\n* `label`: name of chunk. Useful for cross-references\n* `eval`: whether to evaluate the code chunk\n* `echo`: whether to display the code chunk\n* `output`: whether to show chunk output\n* `results: 'asis'` includes the output without markup\n* `message`: whether to display messages\n* `warning`: whether to display warnings\n* `error: true`: continue even if code returns an error.\n* `fig-cap`: caption for the figure\n* `fig-width`, `fig-height`: width and height of the figure\n* `cache`: whether to cache the code chunk\n* `dependson`: cache dependencies\n\n## Debugging\n\n* The Quarto document is compiled in a different environment from your R console.\n* If you get an error, try running all chunks (Ctrl+Alt+R).\n* If you can't reproduce the error, check the working directory (add `getwd()` in a chunk).\n* Try setting `error: true` on problem chunk to help you diagnose what happens. (But change it back!)\n* Look at the intermediate files (`.md` or `.tex`) to see what is happening.\n\n## Caching\n\\fontsize{14}{15}\\sf\n\n\n````{.default}\n```{r}\n#| cache: true\n```\n````\n\n* When evaluating code chunks, knitr will save the results of chunks with caching to files to be reloaded in subsequent runs.\n* Caching is useful when a chunk takes a long time to run.\n* It will re-run if the code in the chunk changes in any way (even comments or spacing).\n* Beware of inherited objects from earlier chunks. Without explicit dependencies, a chunk will not re-run if inherited objects change.\n* Beware of dependence on external files.\n\n## Caching\n\n\n````{.default}\n```{r}\n#| label: chunk1\n#| cache = TRUE\nx <- 1\n```\n\n```{r}\n#| label: chunk2\n#| cache: true\n#| dependson: \"chunk1\"\ny <- x*3\n```\n````\n\n## Caching\n\nCache will be rebuilt if:\n\n* Chunk options change except `include`\n* Any change in the code, even a space or comment\n* An explicit dependency changes\n\nDo not cache if:\n\n * setting R options like `options('width')`\n * setting knitr options like `opts_chunk$set()`\n * loading packages via `library()` if those packages are used by uncached chunks\n\n## Caching with random numbers\n\n\n````{.default}\n```{r}\n#| label: setup\n#| include: false\nknitr::opts_chunk$set(cache.extra = knitr::rand_seed)\n```\n````\n\n* `rand_seed` is an unevaluated expression.\n* Each chunk will check if `.Random.seed` has been changed since the last run.\n* If it has, the chunk will be re-run.\n\n## Some caching options\n\n* `cache-comments` If `false`, changing comments does not invalidate the cache.\n* `cache-rebuild` Force rebuild of cache.\n* `dependson` A character vector of labels of chunks that this chunk depends on.\n* `autodep` If `true`, the dependencies are automatically determined. (May not be reliable.)\n\n## Caching\n\nBuild automatic dependencies among chunks\n\n\n````{.default}\n```\nexecute:\n  cache: true\n  autodep: true\n```\n````\n\n## Child documents\n\n\n````{.default}\n```{r}\n#| child: file1.qmd, file2.qmd\n```\n````\n\n\\pause\\alert{Conditional inclusion}\n\n\n````{.default}\n```{r}\n#| child: !expr if(condition) 'file1.qmd' else 'file2.qmd'\n```\n````\n\n\\pause\\alert{R Script files}\n\n\n````{.default}\n```{r}\n#| file: \"Rscript1.R\"\n```\n````\n\n* Better than `source(\"Rscript1.R\")` because output of script included and dependencies tracked.\n\n## Other language engines\n\n\n````{.default}\n```{python}\nprint(\"Hello Python!\")\n```\n````\n\n\n````{.default}\n```{stata}\nsysuse auto\nsummarize\n```\n````\n\n* Python and Stata need to be installed with executables on `PATH`\n\n## Other language engines\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(knitr::knit_engines$get())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"awk\"       \"bash\"      \"coffee\"    \"gawk\"      \"groovy\"   \n [6] \"haskell\"   \"lein\"      \"mysql\"     \"node\"      \"octave\"   \n[11] \"perl\"      \"php\"       \"psql\"      \"Rscript\"   \"ruby\"     \n[16] \"sas\"       \"scala\"     \"sed\"       \"sh\"        \"stata\"    \n[21] \"zsh\"       \"asis\"      \"asy\"       \"block\"     \"block2\"   \n[26] \"bslib\"     \"c\"         \"cat\"       \"cc\"        \"comment\"  \n[31] \"css\"       \"ditaa\"     \"dot\"       \"embed\"     \"eviews\"   \n[36] \"exec\"      \"fortran\"   \"fortran95\" \"go\"        \"highlight\"\n[41] \"js\"        \"julia\"     \"python\"    \"R\"         \"Rcpp\"     \n[46] \"sass\"      \"scss\"      \"sql\"       \"stan\"      \"targets\"  \n[51] \"tikz\"      \"verbatim\"  \"ojs\"       \"mermaid\"   \"glue\"     \n[56] \"glue_sql\"  \"gluesql\"  \n```\n\n\n:::\n:::\n\n\n## Extensions and templates\n\\fontsize{13}{17}\\sf\n\n* Quarto extensions modify and extend functionality.\n* They are stored locally, in the `_extensions` folder alongside the qmd document.\n* See <https://quarto.org/docs/extensions/> for a list.\n* Templates are extensions used to define new output formats.\n* Journal templates at\\newline <https://quarto.org/docs/extensions/listing-journals.html>\n* Monash templates at\\newline <https://github.com/quarto-monash>\n\n## quarto on the command line\n\\fontsize{14}{14.5}\\sf\\vspace*{-0.4cm}\n\n* `quarto render` to render a quarto or Rmarkdown document.\n* `quarto preview` to preview a quarto or Rmarkdown document.\n* `quarto add <gh-org>/<gh-repo>` to add an extension from a github repository.\n* `quarto update <gh-org>/<gh-repo>` to update an extension\n* `quarto remove <gh-org>/<gh-repo>` to remove an extension\n* `quarto list extensions installed`\n* `quarto use template <gh-org>/<gh-repo>` to use existing repo as starter template.\n\n## Add a custom format\n\nFrom the CLI:\\qquad  `quarto add quarto-monash/memo`\\pause\n\nNew folder/files added\n\n\n```{.default}\n├── _extensions\n│   └── quarto-monash\n│       └── memo\n│           └── ...\n```\n\n\\pause\n\nUpdate YAML\n\n\n```{.default}\n---\ntitle: \"My new file using the Monash memo format\"\nformat: memo-pdf\n---\n```\n\n\n## Activity 1\n\n* Set up a new project.\n* Create a quarto document using an html format.\n* Add a code chunk to generate a figure with a caption.\n* Reference the figure in the text using `@fig-chunklabel`.\n* Add the monash memo extension and generate a pdf output.\n\n## Activity 2\n\n* Create a thesis using the `quarto-monash/thesis` template, and add your name and details to the front page.\n\n# Monash Quarto Templates\n\n## Letter template {.fragile}\n\n\\showtemplate{letter.pdf}\n\\only<2>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{letter.yml}\n\\end{textblock}}\n\n## Memo template\n\n\\showtemplate{memo2.pdf}\n\\only<2>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{memo2.yml}\n\\end{textblock}}\n\n## Memo template\n\n\\showtemplate{memo.pdf}\n\\begin{textblock}{9}(6.5,1)\n\\showyaml{memo.yml}\n\\end{textblock}\n\n## Report template\n\n\\only<1-2>{\\showtemplate{report.pdf}}\n\\only<3>{\\showtemplate{report.pdf}[2]}\n\\only<2-3>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{report.yml}\n\\end{textblock}}\n\n## Exam template\n\n\\only<1-2>{\\showtemplate{exam.pdf}}\n\\only<3>{\\showtemplate{exam.pdf}[2]}\n\\only<4>{\\showtemplate{exam.pdf}[3]}\n\\only<2-4>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{exam.yml}\n\\end{textblock}}\n\n## Presentation template\n\n\\only<2-3>{\\showtemplate{pdfpresentation.pdf}}\n\\only<1>{\\showtemplate{htmltemplate.png}}\n\\only<3>{\\begin{textblock}{8.5}(7,.1)\n\\showyaml{presentation.yml}\n\\end{textblock}}\n\\only<4>{\\begin{textblock}{8.5}(7,.1)\n\\showyaml{presentation2.yml}\n\\end{textblock}}\n\\only<4-5>{\\showtemplate{presentation12.pdf}}\n\\only<6>{\\showtemplate{presentation13.pdf}}\n\n## Working paper template\n\n\\only<1-2>{\\showtemplate{workingpaper.pdf}}\n\\only<3-4>{\\showtemplate{workingpaper.pdf}[2]}\n\\only<5-6>{\\showtemplate{workingpaper.pdf}[3]}\n\n\\only<2-3>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{workingpaper.yml}\n\\end{textblock}}\n\\only<4-6>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{workingpaper2.yml}\n\\end{textblock}}\n\n\\only<6>{\\begin{textblock}{5.7}(10,6.5)\n\\begin{alertblock}{}\\fontsize{10}{10}\\sf\nAdd formats:\n\\begin{itemize}\\tightlist\n\\item  \\texttt{arxiv-pdf} for arXiv\n\\item a quarto journal format when submitting.\n\\end{itemize}\n\\end{alertblock}\n\\end{textblock}}\n\n## Journal articles\n\n\\only<1>{\\showtemplate{workingpaper.pdf}[3]}\n\\only<1>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{workingpaper3.yml}\n\\end{textblock}}\n\\only<2-3>{\\showtemplate{ijf.pdf}}\n\\only<2-3>{\\begin{textblock}{9}(6.5,1)\n\\showyaml{ijf.yml}\n\\end{textblock}}\n\\only<3>{\\begin{textblock}{9}(6.5,7.2)\n\\begin{alertblock}{}\\fontsize{12}{12}\\sf\nAdd \\texttt{+wp} to allow two pdf output files.\n\\end{alertblock}\n\\end{textblock}}\n\n## Thesis template\n\n\\only<1-2>{\\showtemplate{thesis.pdf}}\n\\only<3>{\\showtemplate{thesis.pdf}[2]}\n\\only<4>{\\showtemplate{thesis.pdf}[3]}\n\\only<5>{\\showtemplate{thesis.pdf}[4]}\n\\only<6>{\\showtemplate{thesis.pdf}[5]}\n\\only<7>{\\showtemplate{thesis.pdf}[6]}\n\\only<8>{\\showtemplate{thesis.pdf}[7]}\n\\only<9>{\\showtemplate{thesis.pdf}[8]}\n\\only<10>{\\showtemplate{thesis.pdf}[9]}\n\\only<11>{\\showtemplate{thesis.pdf}[10]}\n\\only<12>{\\showtemplate{thesis.pdf}[11]}\n\\only<13>{\\showtemplate{thesis.pdf}[12]}\n\\only<14>{\\showtemplate{thesis.pdf}[13]}\n\\only<15>{\\showtemplate{thesis.pdf}[14]}\n\\only<16>{\\showtemplate{thesis.pdf}[15]}\n\n\\begin{textblock}{9}(6.5,1)\n\\only<2-16>{\\showyaml{thesis.yml}}\n\\end{textblock}}\n\n## Thesis template\n\n\\centerline{\\includegraphics[height=9cm]{thesis_html}}\n\n## Design choices: Fonts\n\n  * All templates use Fira Sans for headings.\n\n  * All templates use `Source Code Pro` for code which has good disambiguation: `LIli1!| oO0 4AH 5S 7T`\n\n  * All but presentation use Bitstream Vera for the body with a matching mathematical font:\n\n\\begin{block}{}\n\\centerline{\\includegraphics[width=14cm]{sample_bera.pdf}}\n\\end{block}\n\n## Design choices: Citations\n\nAll templates use biblatex with an author-year style consistent with most statistical journals.\n\n\\begin{block}{}\n\\centerline{\\includegraphics[page=15, trim = 0 410 0 235, clip=true, width=16.3cm]{thesis.pdf}}\n\\end{block}\n\n## Github repos: github.com/quarto-monash {.fragile}\n\n\\hspace*{-1cm}{\\includegraphics[height=8cm]{github_repo}}\n\n\\only<2-3>{\\begin{textblock}{6.9}(8.75,1.4)\n\\begin{block}{From a terminal}\\fontsize{9.5}{10}\\ttfamily\nquarto use template quarto-monash/\\rlap{$<$name$>$}\n\\begin{itemize}\\tightlist\n\\item letter\n\\item memo\n\\item presentation\n\\item report\n\\item thesis\n\\item workingpaper\n\\item exam\n\\end{itemize}\n\\end{block}\n\\end{textblock}}\n\n\\only<3>{\\begin{textblock}{6.9}(8.75,7)\n\\begin{block}{From the R console}\\fontsize{9.5}{10}\\ttfamily\nmonash::quarto\\_template\\_install(\\inch$<$name$>$\\inch)\n\\end{block}\n\\end{textblock}\n}\n\n## Structure of a template {.fragile}\n\n\\begin{textblock}{6}(0.2,1.3)\\fontsize{10}{11}\\ttfamily\n\\begin{Verbatim}\n├── _extensions\n│   │   └── quarto-monash\n│   │       └── letter\n│   │           ├── _extension.yml\n│   │           ├── after-body.tex\n│   │           ├── before-body.tex\n│   │           ├── before-title.tex\n│   │           ├── AACSB.png\n│   │           ├── AMBA.png\n│   │           ├── EQUIS.png\n│   │           ├── MBSportrait.jpg\n│   │           ├── monash2.png\n│   │           └── sigfile.png\n└── template.qmd\n\\end{Verbatim}\n\\end{textblock}\n\n\\only<2>{\\begin{textblock}{7.3}(8,1.1)\n\\begin{block}{}\\fontsize{13}{13}\\sf\n\\begin{itemize}\\tightlist\n\\item \\texttt{template.qmd}: template for user to edit.\n\\item \\texttt{extension.yml}: default yaml\n\\item \\texttt{*.tex}: pandoc partials\n\\item Everything else: graphical files needed for the template\n\\end{itemize}\n\\end{block}\n\\end{textblock}}\n\n\\only<3>{\\showfile{template.qmd}}\n\\only<4>{\\showfile{extension.yml}}\n\\only<5>{\\showfile{before-body.tex}}\n\\only<6>{\\showfile{after-body.tex}}\n\\only<7>{\\showfile{before-title.tex}}\n\n\n## Pandoc partial templates\n\\fontsize{14}{15}\\sf\n\n* **doc-class.tex**: document class and options\n* **before-title.tex**: preamble before title block.\n* **title.tex**: create title block.\n* **before-body.tex**: frontmatter, title page, abstract.\n* **after-body.tex**: content at the end of the body.\n* **toc.tex**: table of contents, lists of figures and tables.\n* **before-bib.tex**: after content but before bibliography.\n* **biblio.tex**: creates bibliography\n\n###\n\\fontsize{13}{13}\\sf\n\n* **Details:** \\url{https://quarto.org/docs/journals/templates.html}\n* **Defaults:** \\url{https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/pdf/pandoc}\n\n# Assignment 2\n\n## Activity 3\n\n* Work on your Assignment 2.\n* Ask for help if you need it.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}